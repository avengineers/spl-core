name: CI

on:
    push:
        branches: [develop]
    pull_request:
        branches: [develop]

    workflow_dispatch:

concurrency:
    group: ${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - uses: pre-commit/action@v3.0.1

    # Make sure commit messages follow the conventional commits convention:
    # https://www.conventionalcommits.org
    commitlint:
        name: Lint Commit Messages
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: wagoid/commitlint-github-action@v5

    # Run all tests on Windows
    test:
        name: CI Gate
        runs-on: windows-latest
        needs:
            - commitlint
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: install tools, build and test
              env:
                  # Workaround to force usage of scoop apps installed in USERPROFILE.
                  USER_PATH_FIRST: 1
              run: |
                  .\build.ps1 -install
                  .\build.ps1
              shell: powershell
            - name: Publish Test Results
              uses: EnricoMi/publish-unit-test-result-action/composite@v2
              if: always()
              with:
                  files: |
                      out/test-report.xml

    release:
        needs:
            - test
            - lint
            - commitlint

        runs-on: ubuntu-latest
        environment: release
        concurrency: release
        permissions:
            id-token: write
            contents: write

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  ref: ${{ github.head_ref || github.ref_name }}

            # Do a dry run of PSR
            - name: Test release
              uses: python-semantic-release/python-semantic-release@v9.0.3
              if: github.ref_name != 'develop'
              with:
                  root_options: --noop

            # On main branch: actual PSR + upload to PyPI & GitHub
            - name: Release
              uses: python-semantic-release/python-semantic-release@v9.0.3
              id: release
              if: github.ref_name == 'develop'
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish package distributions to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              if: steps.release.outputs.released == 'true'

            - name: Publish package distributions to GitHub Releases
              uses: python-semantic-release/upload-to-gh-release@main
              if: steps.release.outputs.released == 'true'
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
