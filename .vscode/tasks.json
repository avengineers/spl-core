{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Run tests",
            "command": ".venv/bin/poetry run pytest --cov",
            "windows": {
                "command": ".venv/Scripts/poetry run pytest --cov"
            },
            "type": "shell",
            "presentation": {
                "reveal": "always"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "Build docs",
            "command": ".venv/bin/poetry run sphinx-build docs out/docs/html",
            "windows": {
                "command": ".venv/Scripts/poetry run sphinx-build docs out/docs/html"
            },
            "type": "shell",
            "presentation": {
                "reveal": "always"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "Build docs (all and clean)",
            "command": ".venv/bin/poetry run sphinx-build -a -E docs out/docs/html",
            "windows": {
                "command": ".venv/Scripts/poetry run sphinx-build -a -E docs out/docs/html"
            },
            "type": "shell",
            "presentation": {
                "reveal": "always"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "Open docs in browser",
            "command": "out/docs/html/index.html",
            "type": "shell",
            "presentation": {
                "reveal": "always"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "Run pre-commit checks",
            "command": ".venv/bin/poetry run pre-commit run --all-files",
            "windows": {
                "command": ".venv/Scripts/poetry run pre-commit run --all-files"
            },
            "type": "shell",
            "presentation": {
                "reveal": "always"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            }
        }
    ]
}
